Index: qubes-dom0/src/qubes-core-admin/linux/system-config/Makefile
===================================================================
--- qubes-dom0.orig/src/qubes-core-admin/linux/system-config/Makefile
+++ qubes-dom0/src/qubes-core-admin/linux/system-config/Makefile
@@ -1,12 +1,17 @@
+STATEDIR ?= /var/run
+LIBDIR ?= /usr/lib
+
 all:
 	true
 
-install:
+tmpfiles-qubes.conf: tmpfiles-qubes.conf.in
+	cat tmpfiles-qubes.conf.in | sed "s#@STATEDIR@#$(STATEDIR)#" > tmpfiles-qubes.conf
+install: tmpfiles-qubes.conf
 	mkdir -p $(DESTDIR)/etc/xen/scripts
 	cp vif-route-qubes $(DESTDIR)/etc/xen/scripts
 	cp block-snapshot $(DESTDIR)/etc/xen/scripts
 	ln -s block-snapshot $(DESTDIR)/etc/xen/scripts/block-origin
-	install -m 0644 -D tmpfiles-qubes.conf $(DESTDIR)/usr/lib/tmpfiles.d/qubes.conf
+	install -m 0644 -D tmpfiles-qubes.conf $(DESTDIR)$(LIBDIR)/tmpfiles.d/qubes.conf
 	install -d $(DESTDIR)/etc/logrotate.d
 	install -m 0644 logrotate-qubes \
 		$(DESTDIR)/etc/logrotate.d/qubes
Index: qubes-dom0/src/qubes-core-admin/linux/system-config/tmpfiles-qubes.conf.in
===================================================================
--- /dev/null
+++ qubes-dom0/src/qubes-core-admin/linux/system-config/tmpfiles-qubes.conf.in
@@ -0,0 +1,4 @@
+d @STATEDIR@/qubes 2770 root qubes
+f @STATEDIR@/qubes/xl-lock 0660 root qubes
+f @STATEDIR@/qubes/empty 0444 root qubes
+d @STATEDIR@/xen-hotplug 0755 root root
Index: qubes-dom0/src/qubes-core-admin/linux/systemd/qubes-qmemman.socket
===================================================================
--- /dev/null
+++ qubes-dom0/src/qubes-core-admin/linux/systemd/qubes-qmemman.socket
@@ -0,0 +1,6 @@
+[Socket]
+ListenStream=/run/qubes/qmemman.sock
+SocketMode=0600
+
+[Install]
+WantedBy=sockets.target
Index: qubes-dom0/src/qubes-core-admin/qubes/tools/qmemmand.py
===================================================================
--- qubes-dom0.orig/src/qubes-core-admin/qubes/tools/qmemmand.py
+++ qubes-dom0/src/qubes-core-admin/qubes/tools/qmemmand.py
@@ -28,6 +28,8 @@ import socket
 import sys
 import threading
 
+import systemd.daemon
+import systemd.journal
 import xen.lowlevel.xs
 
 import qubes.qmemman
@@ -235,27 +237,33 @@ parser.add_argument('--foreground',
 
 
 def main():
+    under_systemd = 'NOTIFY_SOCKET' in os.environ
+
     args = parser.parse_args()
 
-    # setup logging
-    ha_syslog = logging.handlers.SysLogHandler('/dev/log')
-    ha_syslog.setFormatter(
-        logging.Formatter('%(name)s[%(process)d]: %(message)s'))
-    logging.root.addHandler(ha_syslog)
-
-    # leave log for backwards compatibility
-    ha_file = logging.FileHandler(LOG_PATH)
-    ha_file.setFormatter(
-        logging.Formatter('%(asctime)s %(name)s[%(process)d]: %(message)s'))
-    logging.root.addHandler(ha_file)
+    if not under_systemd:
+        # setup logging
+        ha_syslog = logging.handlers.SysLogHandler('/dev/log')
+        ha_syslog.setFormatter(
+            logging.Formatter('%(name)s[%(process)d]: %(message)s'))
+        logging.root.addHandler(ha_syslog)
 
-    if args.foreground:
-        ha_stderr = logging.StreamHandler(sys.stderr)
+        # leave log for backwards compatibility
+        ha_file = logging.FileHandler(LOG_PATH)
         ha_file.setFormatter(
             logging.Formatter('%(asctime)s %(name)s[%(process)d]: %(message)s'))
-        logging.root.addHandler(ha_stderr)
+        logging.root.addHandler(ha_file)
 
-    sys.stdin.close()
+        if args.foreground:
+            ha_stderr = logging.StreamHandler(sys.stderr)
+            ha_file.setFormatter(
+                logging.Formatter('%(asctime)s %(name)s[%(process)d]: %(message)s'))
+            logging.root.addHandler(ha_stderr)
+        sys.stdin.close()
+    else:
+        # Under systemd we use the systemd JournalHandler.
+        logging.root.addHandler(
+            systemd.journal.JournalHandler(SYSLOG_IDENTIFIER="qmemman"))
 
     logging.root.setLevel(parser.get_loglevel_from_verbosity(args))
 
@@ -281,30 +289,31 @@ def main():
         ' CACHE_FACTOR={algo.CACHE_FACTOR}'.format(
             algo=qubes.qmemman.algo))
 
-    try:
-        os.unlink(SOCK_PATH)
-    except:
-        pass
+    server = None
+    systemd_sock = None
+    systemd_listen_fds = systemd.daemon.listen_fds(True)
+    if systemd_listen_fds:
+        log.debug('listening on systemd provided socket')
+        server = socketserver.UnixStreamServer(None, QMemmanReqHandler, False)
+        server.socket = socket.fromfd(
+            systemd_listen_fds[0], socket.AF_UNIX, socket.SOCK_STREAM)
+    else:
+        try:
+            os.unlink(SOCK_PATH)
+        except:
+            pass
 
-    log.debug('instantiating server')
-    os.umask(0)
+        log.debug('instantiating server')
+        os.umask(0)
+
+        server = socketserver.UnixStreamServer(SOCK_PATH, QMemmanReqHandler)
+        os.umask(0o077)
 
     # Initialize the connection to Xen and to XenStore
     system_state.init()
 
-    server = socketserver.UnixStreamServer(SOCK_PATH, QMemmanReqHandler)
-    os.umask(0o077)
-
-    # notify systemd
-    nofity_socket = os.getenv('NOTIFY_SOCKET')
-    if nofity_socket:
-        log.debug('notifying systemd')
-        s = socket.socket(socket.AF_UNIX, socket.SOCK_DGRAM)
-        if nofity_socket.startswith('@'):
-            nofity_socket = '\0%s' % nofity_socket[1:]
-        s.connect(nofity_socket)
-        s.sendall(b"READY=1")
-        s.close()
+    if under_systemd:
+        systemd.daemon.notify('READY=1')
 
     threading.Thread(target=server.serve_forever).start()
     XS_Watcher().watch_loop()
Index: qubes-dom0/src/qubes-core-admin/linux/systemd/Makefile
===================================================================
--- qubes-dom0.orig/src/qubes-core-admin/linux/systemd/Makefile
+++ qubes-dom0/src/qubes-core-admin/linux/systemd/Makefile
@@ -8,6 +8,7 @@ install:
 	cp qubes-core.service $(DESTDIR)$(UNITDIR)
 	cp qubes-vm@.service $(DESTDIR)$(UNITDIR)
 	cp qubes-qmemman.service $(DESTDIR)$(UNITDIR)
+	cp qubes-qmemman.socket $(DESTDIR)$(UNITDIR)
 	cp qubesd.service $(DESTDIR)$(UNITDIR)
 	install -d $(DESTDIR)$(UNITDIR)/lvm2-pvscan@.service.d
 	install -m 0644 lvm2-pvscan@.service.d_30_qubes.conf \
Index: qubes-dom0/src/qubes-core-admin/linux/systemd/qubes-qmemman.service
===================================================================
--- qubes-dom0.orig/src/qubes-core-admin/linux/systemd/qubes-qmemman.service
+++ qubes-dom0/src/qubes-core-admin/linux/systemd/qubes-qmemman.service
@@ -4,7 +4,6 @@ Description=Qubes memory management daem
 [Service]
 Type=notify
 ExecStart=/usr/bin/qmemmand
-StandardOutput=syslog
 
 [Install]
 WantedBy=multi-user.target
