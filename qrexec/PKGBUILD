# Maintainer: Sam Day <me@samcday.com>
pkgname=(qrexec qrexec-dom0 qrexec-vm)
pkgbase=qrexec
pkgver=mm_68b8b65f
pkgrel=1
pkgdesc="qrexec, the Qubes OS Remote Procedure Call (RPC) protocol."
arch=(x86_64)
url="https://github.com/QubesOS/qubes-core-qrexec"
license=('GPL')
depends=(libvchan-xen python python-gbulb)
makedepends=(git pandoc python-dbus python-sphinx python-recommonmark python-coverage python-asynctest python-psutil python-pyinotify python-pytest)
source=(
  "git+https://github.com/qubesos/qubes-core-qrexec?tag=v${pkgver}"
  0001-Cleanup-installs-to-use-BINDIR-SBINDIR-LIBDIR.patch
  )
sha512sums=('SKIP'
            'dc369cd4d7b456026ffb4b33eeb9a4ac6abd9d946f8d681498bc0a3bbfdd1d576879c5ad205948a15c7712ab872f534c8eab2e063f369c6cd88b5413ff37d4ab')

prepare() {
  cd "qubes-core-qrexec"
  git apply ../0001-Cleanup-installs-to-use-BINDIR-SBINDIR-LIBDIR.patch
}

build() {
  BACKEND_VMM=xen make -C "${srcdir}/qubes-core-qrexec" prefix=/usr all
}

check() {
  # Disabled atm, qrexec/tests/socket/daemon.py::TestDaemon::test_client_exec hangs.
  # if pkg-config vchan-socket; then
  if false; then
    echo "libvchan-socket is available, including socket tests"
    cp -R "qubes-core-qrexec" "qubes-core-qrexec-socket"
    cd qubes-core-qrexec-socket

    export CFLAGS="--coverage -DCOVERAGE"
    export LDFLAGS=--coverage
    make -C libqrexec BACKEND_VMM=socket
    make -C agent BACKEND_VMM=socket
    make -C daemon BACKEND_VMM=socket
  else
    echo "libvchan-socket not available, skipping socket tests"
    cd qubes-core-qrexec
    export SKIP_SOCKET_TESTS=1
  fi

  python3 -m coverage run -m pytest qrexec/tests -o python_files=*.py -v "$@"
}

package_qrexec() {
  make -C "${srcdir}/qubes-core-qrexec" DESTDIR="$pkgdir/" install-base
}

package_qrexec-dom0() {
  depends+=(qrexec qubes-dom0)
  conflicts+=(qrexec-vm)

  make -C "${srcdir}/qubes-core-qrexec" DESTDIR="$pkgdir/" LIBDIR=/usr/lib SBINDIR=/usr/bin install-dom0
}

package_qrexec-vm() {
	depends+=(qrexec)
	conflicts+=(qrexec-dom0)

  make -C qubes-core-qrexec DESTDIR="$pkgdir/" install-vm
}
